@import "../../../../../charte/src/main/sass/osivia/variables";
@import "../../../../../charte/src/main/sass/osivia/glyphicons/mixins";


.toutatice-slider {
	display: flex;
	flex-wrap: wrap;

	background-color: $white;

	@include border-radius();

	.toutatice-slider-selector {
		display: flex;

		@include make-col(12);

		> * {
			display: flex;

			padding: {
				left: map_get($spacers, 2);
				right: map_get($spacers, 2);
			};
		}

		@media (min-width: map_get($grid-breakpoints, "md")) {
			position: relative;

			flex-direction: column;

			> * {
				position: absolute;
				top: 0;
				bottom: 0;
				left: 0;
				right: 0;
				overflow: hidden;

				flex-direction: column;

				padding: {
					top: map_get($spacers, 2);
					bottom: map_get($spacers, 2);
					left: 0;
					right: 0;
				};
			}
		}

		@media (min-width: map_get($grid-breakpoints, "md")) and (max-width: map_get($grid-breakpoints, "xl") - 1) {
			flex-basis: auto;
			width: (4 * $btn-padding-x) + $line-height-base;
		}

		@media (min-width: map_get($grid-breakpoints, "xl")) {
			@include make-col(3);
		}
	}

	.toutatice-slider-container {
		position: relative;

		@include make-col(12);

		@media (min-width: map_get($grid-breakpoints, "md")) and (max-width: map_get($grid-breakpoints, "xl") - 1) {
			flex-basis: 0;
			flex-grow: 1;
			max-width: 100%;
		}

		@media (min-width: map_get($grid-breakpoints, "xl")) {
			@include make-col(9);
		}
	}

	.toutatice-slider-indicators {
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		z-index: 1;
		
		li {
			.glyphicons {
				$url: glyphicons-url("basic", "298", "circle-empty");
				@include glyphicons-mask($url);
			}
			
			&.active {
				.glyphicons {
					$url: glyphicons-url("basic", "299", "circle-selected");
					@include glyphicons-mask($url);
				}
			}
		}
		
		@media (max-width: map_get($grid-breakpoints, "md") - 1) {
			display: none;
		}
	}

	.toutatice-slider-inner-container {
		display: flex;
		flex-wrap: wrap;
	}

	.toutatice-slider-picture-container {
		position: relative;

		@include make-col(12);

		@media (min-width: map_get($grid-breakpoints, "md")) {
			@include make-col(8);
		}

		.embed-responsive {
			&::before {
				padding-top: (100% / 2.45);
			}
		}

		.embed-responsive-item {
			object-fit: cover;
		}
	}

	.toutatice-slider-text-container {
		position: relative;

		@include make-col(12);

		&::before {
			content: "";
			display: block;

			padding-top: (3 * $line-height-base + 2) * map_get($spacers, 3);
		}

		> * {
			position: absolute;
			top: 0;
			bottom: 0;
			left: map_get($spacers, 5);
			right: map_get($spacers, 5);
			overflow: hidden;

			padding: {
				top: map_get($spacers, 3);
				bottom:  map_get($spacers, 3);
				left: map_get($spacers, 1);
				right: map_get($spacers, 1);
			}

			&::after {
				content: "";

				position: absolute;
				bottom: 0;
				left: 0;
				right: 0;
				height: map_get($spacers, 4);

				@include gradient-y($start-color: rgba($white, 0), $end-color: $white);
			}
		}

		@media (min-width: map_get($grid-breakpoints, "md")) {
			@include make-col(4);

			&::before {
				padding-top: unset;
			}

			> * {
				bottom: 2 * map_get($spacers, 3);
				left: map_get($spacers, 3);

				padding: {
					bottom: 0;
					left: 0;
				}
			}
		}
	}

	
	.carousel-control-prev, .carousel-control-next {
		width: map_get($spacers, 5);
		
		font-size: 1.5em;
	}
	
}
